---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install prerequisites for Redis repository
  apt:
    name:
      - lsb-release
      - curl
      - gpg
    state: present

- name: Add Redis GPG key
  ansible.builtin.get_url:
    url: https://packages.redis.io/gpg
    dest: /tmp/redis.gpg
    mode: '0644'

- name: Import Redis GPG key
  ansible.builtin.shell: |
    gpg --dearmor < /tmp/redis.gpg > /usr/share/keyrings/redis-archive-keyring.gpg
  args:
    creates: /usr/share/keyrings/redis-archive-keyring.gpg

- name: Set permissions on Redis keyring
  file:
    path: /usr/share/keyrings/redis-archive-keyring.gpg
    mode: '0644'

- name: Add Redis repository
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/redis.list
    line: "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb {{ ansible_distribution_release }} main"
    create: yes
    mode: '0644'

- name: Update apt cache after adding Redis repository
  apt:
    update_cache: yes

- name: Install Redis and Redis Sentinel
  apt:
    name: 
      - "redis{% if redis_version %}={{ redis_version }}{% endif %}"
      - "redis-sentinel{% if redis_version %}={{ redis_version }}{% endif %}"
    state: present
  ignore_errors: yes
  register: redis_install_result

- name: Install Redis only if Sentinel package failed
  apt:
    name: "redis{% if redis_version %}={{ redis_version }}{% endif %}"
    state: present
  when: redis_install_result is failed

- name: Install redis-tools if needed
  apt:
    name: redis-tools
    state: present
  ignore_errors: yes

- name: Check if redis-sentinel binary exists
  stat:
    path: /usr/bin/redis-sentinel
  register: sentinel_binary

- name: Find redis-sentinel binary location
  shell: which redis-sentinel || find /usr -name "redis-sentinel" -type f 2>/dev/null | head -1
  register: sentinel_path
  when: not sentinel_binary.stat.exists

- name: Set sentinel binary path
  set_fact:
    redis_sentinel_binary: "{{ sentinel_path.stdout if not sentinel_binary.stat.exists else '/usr/bin/redis-sentinel' }}"

- name: Stop default Redis service (we'll configure our own)
  systemd:
    name: redis-server
    state: stopped
    enabled: no

- name: Create redis user (if not exists from package)
  user:
    name: "{{ redis_user }}"
    system: yes
    shell: /bin/false
    home: "{{ redis_dir }}"
    createhome: no

- name: Create Redis directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
    mode: '0755'
  loop:
    - "{{ redis_dir }}"
    - "{{ redis_config_dir }}"
    - "{{ redis_log_dir }}"
    - "/var/run/redis"

- name: Create Redis configuration
  template:
    src: redis.conf.j2
    dest: "{{ redis_config_dir }}/redis.conf"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
    mode: '0640'
  notify:
    - restart redis

- name: Create Sentinel configuration
  template:
    src: sentinel.conf.j2
    dest: "{{ redis_config_dir }}/sentinel.conf"
    owner: "{{ redis_user }}"
    group: "{{ redis_group }}"
    mode: '0640'
  notify:
    - restart sentinel

- name: Create Redis systemd service
  template:
    src: redis.service.j2
    dest: /etc/systemd/system/redis.service
    mode: '0644'
  notify:
    - reload systemd
    - restart redis

- name: Create Sentinel systemd service
  template:
    src: sentinel.service.j2
    dest: /etc/systemd/system/redis-sentinel.service
    mode: '0644'
  notify:
    - reload systemd
    - restart sentinel

- name: Enable and start Redis service
  systemd:
    name: redis
    enabled: yes
    state: started
    daemon_reload: yes

- name: Wait for Redis to be ready
  wait_for:
    port: "{{ redis_port }}"
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 30

- name: Enable and start Redis Sentinel service
  systemd:
    name: redis-sentinel
    enabled: yes
    state: started
    daemon_reload: yes

- name: Wait for Sentinel to be ready
  wait_for:
    port: "{{ sentinel_port }}"
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 30
